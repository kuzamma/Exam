CREATE TABLE questions (
    id SERIAL PRIMARY KEY,
    level VARCHAR(50),
    subtopic VARCHAR(100),
    question TEXT,
    options TEXT[],
    correct VARCHAR(200)
);


INSERT INTO questions (level, subtopic, question, options, correct)
VALUES
('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Of the given pairs, which has a DIFFERENT expressive power?', '{"Single-Tape and Multi-Tape Turing machine", "Deterministic and Nondeterministic pushdown automata", "Deterministic and Nondeterministic finite automata", "Deterministic and Non-deterministic Single-tape Turing machine"}', 'Deterministic and Nondeterministic pushdown automata'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'A language that is accepted by pushdown automata in which there is a restriction of 10 items on the stack best describes which language', '{"Context-free", "Regular", "Deterministic context-free", "recursive"}', 'Regular'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Context-free grammar is not closed under which of the following?', '{"Union", "Complementation", "Kleen star", "Product"}', 'Complementation'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Which of the following does the CFGs close under-', '{"Union, Intersection", "Union, Kleen Closure", "Intersection, Complement", "Complement, Kleen Closure"}', 'Union, Kleen Closure'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Let L1 be a context-free language and L2 be a regular language. Which of the following is/are False? a. L1-L2 is not context-free, b. L1 ∩ L2 is context-free, c. ~L1 is context-free, 
d. ~L2 is regular ', '{"Only c", "Only b", "Both a and c", "Both b and c"}', 'Both a and c'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Which of the following statements is true?', '{"A deterministic push-down automaton always accepts a context-free language", "Union is closed under context-free language", "The language formed by the intersection of two context-free languages is also context-free", "Context-free language is closed under complement"}', 'Union is closed under context-free language'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Consider a grammar S -> aSa|bSb|a|b; And alphabet {a,b}. The language generated by the given grammar over the given alphabet is a set of:', '{"All even length palindromes", "All palindromes", "Kleen star", "Strings that begin and end with the same symbol"}', 'All odd length palindromes'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'The entity which generates Language is termed as:', '{"Automata", "Tokens", "Grammar", "Data"}', 'Grammar'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Production Rule: aAb->agb belongs to which of the following category?', '{"Regular Languages", "Context free Languages", "Context Sensitive Languages", "Recursively Ennumerable Language"}', 'Context Sensitive Languages'),

('easy', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Which of the following statement is false?', '{"Context free language is the subset of context sensitive language", "Regular language is the subset of context sensitive language", "Recursively ennumerable language is the super set of regular language", "Context sensitive language is a subset of context free language"}', 'Context sensitive language is a subset of context free language'),




('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'L is a regular Language if and only If the set of __________ classes of IL is finite.', '{" Equivalence", " Reflexive", "Myhill", "Nerode"}', 'Equivalence'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'A language can be generated from simple primitive language in a simple way if and only if', '{"It is recognized by a device of infinite states", "It takes no auxiliary memory", "All of the mentioned", "None of the mentioned"}', 'It takes no auxiliary memory'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Which of the following does not represents the given language?
Language: {0,01}', '{"0+01", "{0} U {01}", " {0} U {0}{1}", " {0} ^ {01}"}', ' {0} ^ {01}'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Which among the following looks similar to the given expression?
((0+1). (0+1)) *', '{"{xϵ {0,1} *|x is all binary number with even length}", "{xϵ {0,1} |x is all binary number with even length}", " {xϵ {0,1} *|x is all binary number with odd length}", "  {xϵ {0,1} |x is all binary number with odd length}"}', ' {xϵ {0,1} *|x is all binary number with even length}'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'RR* can be expressed in which of the forms:', '{"R+", "R-", " R+ U R-", "R"}', 'R+'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'A finite automaton accepts which type of language:', '{"Type 0", "Type 1", " Type 2", "Type 3"}', 'Type 3'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Arden’s theorem is true for:', '{"More than one initial states", "Null transitions", " Non-null transitions", " /"}', 'Non-null transitions'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'The difference between number of states with regular expression (a + b) and (a + b) * is:', '{"1", "2", "3", "0"}', '1'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', 'In order to represent a regular expression, the first step to create the transition diagram is:', '{"Create the NFA using Null moves", "Null moves are not acceptable, thus should not be used", "Predict the number of states to be used in order to construct the Regular expression", "None of the mentioned"}', 'Create the NFA using Null moves'),

('easy', ' REGULAR EXPRESSIONS AND LANGUAGES', '(0+ε) (1+ε) represents', '{" {0, 1, 01, ε}", "{0, 1, ε}", "{0, 1, 01 ,11, 00, 10, ε}", "{0, 1}"}', ' {0, 1, 01, ε}'),



('easy', ' FINITE AUTOMATA', 'A regular language over an alphabet ∑ is one that cannot be obtained from the basic languages using the operation', '{" Union", "Concatenation", " Kleene*", "All of the mentioned"}', 'All of the mentioned'),

('easy', ' FINITE AUTOMATA', 'The minimum number of states required to recognize an octal number divisible by 3 are/is', '{"1", "3", "5", "7"}', '3'),

('easy', ' FINITE AUTOMATA', 'Which of the following is not a part of 5-tuple finite automata?', '{"Input alphabet", "Transition function", " Initial State", "Output Alphabet"}', 'Output Alphabet'),

('easy', ' FINITE AUTOMATA', 'Subset Construction method refers to:', '{"Conversion of NFA to DFA", "DFA minimization", " Eliminating Null references", " ε-NFA to NFA"}', 'Conversion of NFA to DFA'),

('easy', ' FINITE AUTOMATA', 'If L is a regular language, Lc and Lr both will be:', '{"Accepted by NFA", "Rejected by NFA", " One of them will be accepted", "Cannot be said"}', 'Accepted by NFA'),

('easy', ' FINITE AUTOMATA', 'In NFA, this very state is like dead-end non final state:', '{"ACCEPT", "REJECT", " DISTINCT", "START"}', 'REJECT'),

('easy', ' FINITE AUTOMATA', 'The production of form non-terminal -> ε is called:', '{"Sigma Production", "Null Production", "Epsilon Production", "All of the mentioned"}', 'Null Production'),

('easy', ' FINITE AUTOMATA', 'Which of the following is a regular language?', '{"String whose length is a sequence of prime numbers", "String with substring wwr in between", "Palindrome string", "String with even number of Zero’s"}', 'String with even number of Zero’s'),

('easy', ' FINITE AUTOMATA', 'Which of the following recognizes the same formal language as of DFA and NFA?', '{"Power set Construction", " Subset Construction", "Robin-Scott Construction", "All of the mentioned"}', 'All of the mentioned'),

('easy', ' FINITE AUTOMATA', 'Regular sets are closed under union, concatenation and kleene closure.', '{"True", " False", "Depends on regular set", "Can’t say"}', 'True'),


('easy', ' TURING MACHINES', 'Which of the functions are not performed by the turing machine after reading a symbol?', '{"writes the symbol", "moves the tape one cell left/right", "proceeds with next instruction or halts", "none of the mentioned"}', 'none of the mentioned'),

('easy', ' TURING MACHINES', '‘a’ in a-machine is:', '{"Alan", "arbitrary", "automatic", "none of the mentioned"}', 'automatic'),

('easy', ' TURING MACHINES', 'Which of the problems were not answered when the turing machine was invented?', '{"Does a machine exists that can determine whether any arbitrary machine on its tape is circular", "Does a machine exists that can determine whether any arbitrary machine on its tape is ever prints a symbol", "Hilbert Entscheidungs problem", "none of the mentioned"}', 'None of the mentioned'),

('easy', ' TURING MACHINES', 'The ability for a system of instructions to simulate a Turing Machine is called _________', '{"Turing Completeness", "Simulation", "Turing Halting", "none of the mentioned"}', 'Turing Completeness'),

('easy', ' TURING MACHINES', 'TTuring machine can be represented using the following tools:', '{"Transition graph", "Transition table", "Queue and Input tape", "All of the mentioned"}', 'All of the mentioned'),

('easy', ' TURING MACHINES', 'Which of the following is false for an abstract machine?', '{"Turing machine", "theoretical model of computer", "assumes a discrete time paradigm", "All of the mentioned"}', 'All of the mentioned'),

('easy', ' TURING MACHINES', 'Fill in the blank with the most appropriate option.
Statement: In theory of computation, abstract machines are often used in ___________ regarding computability or to analyze the complexity of an algorithm.', '{"thought experiments", "principle", " hypothesis", "All of the mentioned"}', 'All of the mentioned'),

('easy', ' TURING MACHINES', 'State true or false:
Statement: RAM model allows random access to indexed memory locations.', '{"True", "False"}', 'True'),

('easy', ' TURING MACHINES', 'A turing machine that is able to simulate other turing machines:', '{"Nested Turing machines", "Universal Turing machine", "Counter machine", "None of the mentioned"}', 'Universal Turing machine'),

('easy', ' TURING MACHINES', 'Which of the problems are unsolvable?', '{"Halting problem", "Boolean Satisfiability problem", "Halting problem & Boolean Satisfiability problem", "None of the mentioned"}', 'Halting problem & Boolean Satisfiability problem'),




('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Let Q be a context-free language, and P be a regular language such that Q is a subset of P. For example, let P be a language given by the regular expression a*b* and Q be a context-free language given by { anbn | n ϵ N }. Then which of the following is always regular?', '{"P ∩ Q", "P - Q", " Σ* - P", "Σ* - Q"}', 'Σ* - P'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Consider a context-free language with {S, A, B} as the variable alphabet, {a,b} as the terminal alphabet with S as the start symbol and following production rules:
S → aB             S → bA
B → b               A → a
B → bS             A → aS
B →aBB           A → bAA
The grammar above generates which of the following strings:', '{"aaaabb", "aabbbb ", "aabbab", "abbbba"}', 'aabbab'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Consider the grammar with productions
S → aSb | SS | ϵ
This grammar is', '{"Context-free, linear", "Context-free, non-linear", "Non-context-free, linear", "Non-context-free, non-linear"}', 'Context-free, non-linear'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Consider the following grammar
S → aS | A
A→ aAb | bAa | ϵ
Given S is the starting symbol, A is a non-terminal, and a,b is terminal. Which of the following string is generated by the above grammar?', '{"aabbaba", "aabaaba", "abababb", "aabbaab"}', 'aabbaab'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Let G be a context-free grammar. Let P be the number of parse trees, l be the number of left-most derivations, r be the number of rightmost derivations. We have a string w and have calculated the values of P, l and r. What should be the relation between P, l and r?', '{"l <= P >= r", "l = P = r", "l >= P >= r", "None of these"}', 'l = P = r'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Consider the two languages L1 = φ and L2 = {1}. Then L1* ∪ L1 * L2* is represented by which of the following?', '{"{ ϵ }", "{ ϵ, 1 } ", "φ ", "1*"}', '1*'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'To derive the string ((() ()) ()), How many steps would be required if the grammar has the below production rules:
S → SS
S → (S)
S → ϵ', '{"10", "15 ", "12", "16"}', '10'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'For S->0S1|e for ∑={0,1}*, which of the following is wrong for the language produced?', '{"V", "S", "(V+∑)*", "V+ ∑"}', '(V+∑)*'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'Which of the expression is appropriate?
For production p: a->b where a∈V and b∈_______', '{"Non regular language", " 0n1n | n>=0", "0n1n | n>=1", "None of the mentioned"}', 'None of the mentioned'),

('moderate', ' CONTEXT-FREE LANGUAGES AND PUSHDOWN AUTOMATA', 'The minimum number of productions required to produce a language consisting of palindrome strings over ∑={a,b} is', '{"5", "3", "7", "6"}', '5'),


('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Concatenation of R with Ф outputs:', '{"R", "Ф", "R.Ф", "None of the mentioned"}', 'Ф'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Simplify the following regular expression: ε+1*(011) *(1*(011) *) *', '{"(1+011) *", "(1*(011) *)", "(1+(011) *) *", "(1011) *"}', '(1+011) *'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'P, O, R be regular expression over ∑, P is not ε, then
R=Q + RP has a unique solution:', '{"Q*P", "QP*", "Q*P*", "(P*O*) *"}', 'QP*'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'The minimum number of states required to automate the following Regular Expression:
(1) *(01+10) (1) *', '{"4", "3", "2", "5"}', '4'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Regular Expression denote precisely the ________ of Regular Language.', '{"Class", "Power Set", "Super Set", "None of the mentioned"}', 'Class'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Let for ∑= {0,1} R= (∑∑∑) *, the language of R would be', '{"{w | w is a string of odd length}", "{w | w is a string of length multiple of 3}", "{w | w is a string of length 3}", "All of the mentioned"}', '{w | w is a string of length multiple of 3}'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'LIf ∑= {0,1}, then Ф* will result to:', '{"ε", "Ф", "∑", "None  of the mentioned"}', 'ε'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Which of the following represents a language which has no pair of consecutive 1’s if ∑= {0,1}?', '{" (0+10)*(1+ε)", "(0+10)*(1+ε)*", "(0+101)*(0+ε)", "(1+010)*(1+ε)"}', ' (0+10)*(1+ε)'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Which of the following regular expressions represents the set of strings which do not contain a substring ‘rt’ if ∑= {r, t}', '{"(rt)*", "(tr)*", "(r*t*)", "(t*r*)"}', '(t*r*)'),

('moderate', ' REGULAR EXPRESSIONS AND LANGUAGES', 'Which among the following is equivalent to the given regular expression?
01*+1', '{"(01)*+1", "0((1)*+1)", "(0(1)*)+1", "((0*1)1*)*"}', '(0(1)*)+1'),



('moderate', ' FINITE AUTOMATA', 'Assume the R is a relation on a set A, aRb is partially ordered such that a and b are _____________', '{" reflexive", "transitive", "symmetric", "reflexive and transitive"}', 'reflexive and transitive'),

('moderate', ' FINITE AUTOMATA', 'The non- Kleene Star operation accepts the following string of finite length over set A = {0,1} | where string s contains even number of 0 and 1', '{" 01,0011,010101", "0011,11001100", "ε,0011,11001100", "ε,0011,11001100"}', '0011,11001100'),

('moderate', ' FINITE AUTOMATA', 'Statement 1: A Finite automata can be represented graphically; Statement 2: The nodes can be its states; Statement 3: The edges or arcs can be used for transitions
Hint: Nodes and Edges are for trees and forests too.
Which of the following make the correct combination?', '{" Statement 1 is false but Statement 2 and 3 are correct", "Statement 1 and 2 are correct while 3 is wrong", "None of the mentioned statements are correct", " All of the mentioned"}', ' All of the mentioned'),

('moderate', ' FINITE AUTOMATA', 'Given Language:
Ln= {xϵ {0,1} * | |x|≥n, nth symbol from the right in x is 1}
How many state are required to execute L3 using NFA?', '{" 16", "15", "8", " 7"}', ' 15'),

('moderate', ' FINITE AUTOMATA', 'GComplement of a DFA can be obtained by', '{"making starting state as final state", "no trival method", "making final states non-final and non-final to final", " make final as a starting state"}', ' making final states non-final and non-final to final'),

('moderate', ' FINITE AUTOMATA', 'GComplement of regular sets are _________', '{"Regular", "CFG", "CSG", " RE"}', ' Regular'),

('moderate', ' FINITE AUTOMATA', 'If L1 is regular L2 is unknown but L1-L2 is regular ,then L2 must be', '{"Empty set", "CFG", "Decidable", "Regular"}', ' Regular'),

('moderate', ' FINITE AUTOMATA', 'Reverse of (0+1)* will be', '{" Phi", "Null", "(0+1)*", "(0+1)"}', ' (0+1)*'),

('moderate', ' FINITE AUTOMATA', 'A ___________ is a substitution such that h(a) contains a string for each a.', '{" Closure", "Interchange", "Homomorphism", "Inverse Homomorphism"}', 'Homomorphism'),

('moderate', ' FINITE AUTOMATA', 'Homomorphism of a regular set is _______', '{"Universal set", "Null set", "Regular set", "Non regular set"}', 'Regular set'),



('moderate', ' TURING MACHINES', ' Which of the following are related to construction of One Tape turing machines?', '{"JFLAP", "NFLAP", "All of the mm", "None of the mentioned"}', 'JFLAP'),

('moderate', ' TURING MACHINES', ' Which of the following topics cannot be covered using JFLAPS?', '{"L-System", "Unrestricted Grammar", "Regular Expression", "None of the mentioned"}', 'JNone of the mentioned'),

('moderate', ' TURING MACHINES', ' State true or false:
Statement: Multitape turing machine have multi tapes where each tape is accessed with one head.', '{"True", "False"}', 'False'),

('moderate', ' TURING MACHINES', ' Which of the following statements is/are true?', '{"Every multitape turing machine has its equivalent single tape turing machine", "Every multitape turing machine is not an abstract machine", "All of the mentioned", "None of the mentioned"}', 'Every multitape turing machine has its equivalent single tape turing machine'),

('moderate', ' TURING MACHINES', 'Are Multitape and Multitrack turing machines same?', '{"Yes", "No", "Somewhat yes", "Cannot tell"}', 'Yes'),

('moderate', ' TURING MACHINES', 'Which of the following can accept even palindrome over {a,b}', '{"Push down Automata", "Turing machine", "NDFA", "All of the mentioned"}', 'NDFA'),

('moderate', ' TURING MACHINES', 'Which of the functions can a turing machine not perform?', '{"Copying a string", "Deleting a symbol", "Accepting a pal", "Inserting a symbol"}', 'Inserting a symbol'),

('moderate', ' TURING MACHINES', 'If T1 and T2 are two turing machines. The composite can be represented using the expression:', '{"T1T2", "T1 U T2", "T1 X T2", "None of the mentioned"}', 'T1T2'),

('moderate', ' TURING MACHINES', 'Which of the following does not exists?', '{"Turing Machine with Multiple heads", "Turing Machine with infinite tapes", "Turing machine with two dimensional tapes", "None of the mentioned"}', 'None of the mentioned'),

('moderate', ' TURING MACHINES', 'A turing machine has ____________ number of states in a CPU.', '{"finite", "infinite", "May be finite", "None of the mentioned"}', 'finite'),


